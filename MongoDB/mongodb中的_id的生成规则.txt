


MongoDB 定义_id
db.products.insert( { _id: 10, item: "box", qty: 20 } ) 

之前我们使用MySQL等关系型数据库时，主键都是设置成自增的。但在分布式环境下，这种方法就不可行了，会产生冲突。
为此，MongoDB采用了一个称之为ObjectId的类型来做主键。

MongoDB 从一开始就设计用来作为分布式数据库，处理多个节点是一个核心要求。后面会看到ObjectId 类型在分片环境中要容易生成得多。

MongoDB中存储的文档必须有一个"_id" 。这个键值可以是任何类型，默认是ObjectID对象。
在一个集合里，每个文档都有一个唯一的“_id”，确保集合里的每个文档都能被唯一标示。

ObjectId 使用12 字节的存储空间，每个字节两位十六进制数字，是一个24 位的字符串。

2. 自动生成_id
前面讲到，如果插入文档的时候没有"_id" 键，系统会自动帮你创建一个。可以由MongoDB 服务器来做这件事情，但通常会在客户端由驱动程序完成。理由如下。

MongoDB可以通过自身的服务来产生objectId，也可以通过客户端的驱动程序来生成objectId。虽然objectId是轻量级的，但如果全部在服务端生成肯定会花费一点开销。
所以，能从服务器端转移到客户端驱动程序完成的，就尽量转移到客户端来完成，减少服务器端的开销。


首先通过终端命令行，向mongodb的collection中插入一条不带“_id”的记录。然后，通过查询刚插入的数据，发现自动生成了一个objectId，4e7020cb7cac81af7136236b。
这个24位的字符串，虽然看起来很长，但实际上它是由一组十六进制的字符构成，每个字节两位的十六进制数字，总共用了12字节的存储空间。
相比MYSQL int类型的4个字节，MongoDB确实多出了很多字节。不过按照现在的存储设备，多出来的字节应该不会成为什么瓶颈。不过MongoDB的这种设计，体现着空间换时间的思想。


https://www.cnblogs.com/xjk15082/archive/2011/09/18/2180792.html
